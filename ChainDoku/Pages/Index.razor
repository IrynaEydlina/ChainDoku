@page "/{stay?}"
@using Models.Enums;
@using ChainDoku.Services;
@inject NavigationManager NavigationManager;
@inject StateService StateService;
<div class="main-content">
    <header></header>
    <div class="main-body">
        <h1>Sudoku</h1>
        <div class="main-actions">
            @if (_lastStateExists)
            {
                <button @onclick="Continue">Continue</button>
            }
            <div>
                <label>Select Difficulty</label>
                <select class="custom-select" @bind="Diff">
                    @foreach (var i in Enum.GetValues<Difficulty>())
                    {
                        <option value="@i">@(Enum.GetName<Difficulty>(i))</option>
                    }
                </select>
            </div>
            <button class="btn btn-primary" @onclick="NewGame">
                <i class="fas fa-circle-play"></i>
                New Game
            </button>
        </div>
    </div>
    <footer>
    </footer>
</div>
@code {
    [Parameter]
    public string Stay { get; set; }

    private const string DiffKey = nameof(DiffKey);
    private bool _lastStateExists;
    private Difficulty _difficulty;

    private Difficulty Diff
    {
        get => _difficulty; set
        {
            _difficulty = value;
            Preferences.Set(DiffKey, (int)_difficulty);
        }
    }
    protected override void OnInitialized()
    {
        base.OnInitialized();

        // TODO: remove when dev state is done because of not finaly determined structure of saving cells
        // may be splitted into values and candidates preferences to low amount of memory
        StateService.ClearState();
        _lastStateExists = StateService.LastStateExists();

        _difficulty = (Difficulty)Preferences.Get(DiffKey, 0);
        if (_lastStateExists && string.IsNullOrEmpty(Stay))
        {
            NavigationManager.NavigateTo($"/gamepage/1");
        }
    }

    private void Continue()
    {
        NavigationManager.NavigateTo($"/gamepage/1");
    }

    private void NewGame()
    {
        StateService.ClearState();
        NavigationManager.NavigateTo($"/gamepage/0");
    }

    enum ThemeEnum { Light, Dark }
}
